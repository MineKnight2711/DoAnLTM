/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import models.Account;
import facial_recognition.FaceReconigtion;
import java.awt.Color;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import routes.FormRoute;
/**
 *
 * @author dell
 */
public class frmAddFace extends javax.swing.JFrame {
    private static Account account;
    private Thread thread;
    private static String frm;
    private FaceReconigtion face;

    /**
     * Creates new form frmCameraAcess
     * @param account
     * @param frm
     */
    public frmAddFace(Account account, String frm) {
        initComponents();
        frmAddFace.frm = frm;
        frmAddFace.account = account; 
        face = new FaceReconigtion();
        face.getDisplaySaveValue(lblAnhChup,lblSoAnh, account);
        face.getProgress(progressSaveImage);
        progressSaveImage.setVisible(false);
        face.setMode(true);
        runableThread();
        getRootPane().setBorder(BorderFactory.createMatteBorder(3, 3, 3, 3, Color.cyan));           
    }       
    
    private void runableThread(){
        Runnable frameGrabber = () -> {
                while (true) {
                    face.initializeCamera("Lưu", lblCameraDisplay);
                }
            };
            // Create a new thread for grabbing frames from the camera
            thread = new Thread(frameGrabber); 
            thread.setDaemon(true);  
            thread.start(); 
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcChooseImages = new javax.swing.JFileChooser();
        lblCameraDisplay = new javax.swing.JLabel();
        btnMoCamera = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnLuuKhuonMat = new javax.swing.JButton();
        lblAnhChup = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblSoAnh = new javax.swing.JLabel();
        btnChonAnh = new javax.swing.JButton();
        progressSaveImage = new spinner_progress.SpinnerProgress();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thêm khuôn mặt");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(lblCameraDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 36, 652, 388));

        btnMoCamera.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnMoCamera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/camera.png"))); // NOI18N
        btnMoCamera.setText("Mở camera");
        btnMoCamera.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnMoCamera.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnMoCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoCameraActionPerformed(evt);
            }
        });
        getContentPane().add(btnMoCamera, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 170, 40));

        btnBack.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return.png"))); // NOI18N
        btnBack.setText("Trở về");
        btnBack.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 30));

        btnLuuKhuonMat.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnLuuKhuonMat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/face-scan.png"))); // NOI18N
        btnLuuKhuonMat.setText("Lưu khuôn mặt");
        btnLuuKhuonMat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnLuuKhuonMat.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLuuKhuonMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuKhuonMatActionPerformed(evt);
            }
        });
        getContentPane().add(btnLuuKhuonMat, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 442, 200, 40));
        getContentPane().add(lblAnhChup, new org.netbeans.lib.awtextra.AbsoluteConstraints(685, 36, 286, 260));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("/10");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(827, 302, 37, -1));

        lblSoAnh.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSoAnh.setForeground(new java.awt.Color(255, 204, 0));
        lblSoAnh.setText("0");
        getContentPane().add(lblSoAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 302, 25, -1));

        btnChonAnh.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnChonAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gallery.png"))); // NOI18N
        btnChonAnh.setText("Chọn ảnh");
        btnChonAnh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnChonAnh.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });
        getContentPane().add(btnChonAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(513, 442, 160, 40));

        progressSaveImage.setForeground(new java.awt.Color(255, 153, 51));
        progressSaveImage.setValue(50);
        progressSaveImage.setIndeterminate(true);
        getContentPane().add(progressSaveImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 442, 38, 38));

        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_image.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoCameraActionPerformed
        // TODO add your handling code here:
        if (face.isIsRecording()) {
            // Stop recording
            face.setIsRecording(false);
            btnMoCamera.setText("Mở camera");
        } else {
            // Start recording
            face.setIsRecording(true);
            btnMoCamera.setText("Tắt camera");
        }
    }//GEN-LAST:event_btnMoCameraActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        face.setIsRecording(false);
        if(frm.equals("capNhat")){     
            face.setIsRecording(false);
            thread.interrupt();            
            FormRoute.openFormInfo(this, account);
        }
        else{
            FormRoute.openFormLogin(this);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLuuKhuonMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuKhuonMatActionPerformed
        progressSaveImage.setVisible(true);
        if(!face.isIsRecording()){
            JOptionPane.showMessageDialog(null, "Chưa bật camera");
            return;
        }
        if(!face.isCheck()){            
            face.setCheck(true);
        }
    }//GEN-LAST:event_btnLuuKhuonMatActionPerformed

    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        // TODO add your handling code here:
        JFileChooser fcChooseImage = new JFileChooser();
        fcChooseImage.setMultiSelectionEnabled(true);
        fcChooseImage.setFileSelectionMode(JFileChooser.FILES_ONLY);
        // Set file filter to allow only image files
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif");
        fcChooseImage.setFileFilter(imageFilter);

        if (fcChooseImage.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                int count = 0;
                File[] selectedFiles = fcChooseImage.getSelectedFiles();
                List<byte[]> imageList = new ArrayList<>();
                for (File image : selectedFiles) {
                    Path imagePath = image.toPath();
                    byte[] imageBytes = Files.readAllBytes(imagePath);
                    byte[] faceImage = face.detctFace(imageBytes);
                    if (faceImage != null) {
                        imageList.add(faceImage);
                        count++;
                    }
                }
                if(count == 0){
                    JOptionPane.showMessageDialog(null, String.format("Không nhận diện được khuôn mặt nào trong tổng số %d ảnh đã chọn", selectedFiles.length));
                    return;
                }
                JOptionPane.showMessageDialog(null, String.format("Nhận diện được %d khuôn mặt trong tổng %d số ảnh đã chọn", count, selectedFiles.length));
                frmDisplayChooseImage open = new frmDisplayChooseImage(imageList, account);
                open.setVisible(true);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAddFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAddFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAddFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAddFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAddFace(account, frm).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnLuuKhuonMat;
    private javax.swing.JButton btnMoCamera;
    private javax.swing.JFileChooser fcChooseImages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAnhChup;
    private javax.swing.JLabel lblCameraDisplay;
    private javax.swing.JLabel lblSoAnh;
    private spinner_progress.SpinnerProgress progressSaveImage;
    // End of variables declaration//GEN-END:variables
}
