/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import utils.KeyPressCheck;
import utils.CheckInput;
import at.favre.lib.crypto.bcrypt.BCrypt;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.awt.Color;
import models.Account;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Calendar;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import models.OperationJson;
import routes.FormRoute;
import utils.AES;
import utils.BaseURL;
import utils.EncodeDecode;

/**
 *
 * @author dell
 */
public class frmRegister extends javax.swing.JFrame {
    private Account acc;
    private DocumentListener textChangeListener;
    private CheckInput inputCheck;
    private KeyPressCheck keyCheck;
    private Gson gson;
    /**
     * Creates new form FrmRegister
     */
    public frmRegister() {        
        initComponents();
        CreateAccountFieldStatus(false);
        TextChangeEvent();
        SetDateNow();
        CheckKeyPress();
        gson=new GsonBuilder().setDateFormat("MMM d, yyyy").create();
        inputCheck = new CheckInput();
        keyCheck = new KeyPressCheck();
        GroupRadioBox();
        rbMale.setSelected(true);
        getRootPane().setBorder(BorderFactory.createMatteBorder(3, 3, 3, 3, Color.cyan)); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgRadioBox = new javax.swing.ButtonGroup();
        lblTaoTaiKhoan = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnTroVe = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblDiaChi = new javax.swing.JLabel();
        lblSoDienThoai = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        rbOther = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        rbMale = new javax.swing.JRadioButton();
        lblGioiTinh = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dcBrithday = new com.toedter.calendar.JDateChooser();
        txtFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblHo = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        btnCreateAccount = new javax.swing.JButton();
        cbShowPassword = new javax.swing.JCheckBox();
        lblNhapLaiMatKhau = new javax.swing.JLabel();
        passfRe_enterPassword = new javax.swing.JPasswordField();
        passfPassword = new javax.swing.JPasswordField();
        lblMatKhau = new javax.swing.JLabel();
        lblTaiKhoan = new javax.swing.JLabel();
        txtAccount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTaoTaiKhoan.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        lblTaoTaiKhoan.setText("Tạo tài khoản");
        getContentPane().add(lblTaoTaiKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel4.setText("Nhập thông tin cá nhân");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        btnTroVe.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnTroVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return.png"))); // NOI18N
        btnTroVe.setText("Trở về");
        btnTroVe.setHideActionText(true);
        btnTroVe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTroVe.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnTroVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroVeActionPerformed(evt);
            }
        });
        getContentPane().add(btnTroVe, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 30));

        lblEmail.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblEmail.setText("Email:");
        getContentPane().add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 50, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 202, 280, 30));
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 242, 280, 30));

        lblDiaChi.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblDiaChi.setText("Địa chỉ:");
        getContentPane().add(lblDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, -1));

        lblSoDienThoai.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblSoDienThoai.setText("Số điện thoại:");
        getContentPane().add(lblSoDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 100, -1));
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 282, 280, 30));

        rbOther.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        rbOther.setText("Khác");
        getContentPane().add(rbOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, -1));

        rbFemale.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        rbFemale.setText("Nữ");
        getContentPane().add(rbFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));

        rbMale.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        rbMale.setText("Nam");
        getContentPane().add(rbMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));

        lblGioiTinh.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblGioiTinh.setText("Giới tính:");
        getContentPane().add(lblGioiTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 70, -1));

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel3.setText("Ngày sinh:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 80, 20));

        dcBrithday.setDateFormatString("dd/MM/yyyy");
        getContentPane().add(dcBrithday, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 142, 280, 30));
        getContentPane().add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 102, 280, 30));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel2.setText("Tên lót/Tên:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, -1));

        lblHo.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblHo.setText("Họ:");
        getContentPane().add(lblHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 30, -1));

        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLastNameKeyPressed(evt);
            }
        });
        getContentPane().add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 62, 280, 30));

        btnCreateAccount.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnCreateAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/register.png"))); // NOI18N
        btnCreateAccount.setText("Tạo tài khoản");
        btnCreateAccount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnCreateAccount.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });
        getContentPane().add(btnCreateAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, -1, 40));

        cbShowPassword.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        cbShowPassword.setText("Hiện mật khẩu");
        cbShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbShowPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(cbShowPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, -1, -1));

        lblNhapLaiMatKhau.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblNhapLaiMatKhau.setText("Nhập lại mật khẩu:");
        getContentPane().add(lblNhapLaiMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 130, -1));
        getContentPane().add(passfRe_enterPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 462, 280, 30));
        getContentPane().add(passfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 422, 280, 30));

        lblMatKhau.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblMatKhau.setText("Mật khẩu:");
        getContentPane().add(lblMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 70, -1));

        lblTaiKhoan.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        lblTaiKhoan.setText("Tài khoản:");
        getContentPane().add(lblTaiKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 80, -1));
        getContentPane().add(txtAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 382, 280, 30));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/register.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /*INPUT STATUS*/
    private void TextChangeEvent(){       
        textChangeListener = new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTextFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTextFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateTextFields();
            }
            private void updateTextFields(){
                if(txtLastName.getText().isEmpty() || txtFirstName.getText().isEmpty() || txtPhone.getText().isEmpty() || 
                   txtPhone.getText().isEmpty() || txtAddress.getText().isEmpty() || txtEmail.getText().isEmpty() || ChonGioiTinh() == null)
                    CreateAccountFieldStatus(false);
                else 
                    CreateAccountFieldStatus(true);                  
            }
        };
        txtLastName.getDocument().addDocumentListener(textChangeListener);
        txtFirstName.getDocument().addDocumentListener(textChangeListener);
        txtPhone.getDocument().addDocumentListener(textChangeListener);
        txtAddress.getDocument().addDocumentListener(textChangeListener);
        txtEmail.getDocument().addDocumentListener(textChangeListener);
        txtAccount.getDocument().addDocumentListener(textChangeListener);
        passfPassword.getDocument().addDocumentListener(textChangeListener);
        passfRe_enterPassword.getDocument().addDocumentListener(textChangeListener);
    }
    
    private void CreateAccountFieldStatus(boolean value){
        txtAccount.setEnabled(value);
        passfPassword.setEnabled(value);
        passfRe_enterPassword.setEnabled(value);
        cbShowPassword.setEnabled(value);
        if(!value){
            btnCreateAccount.setEnabled(value);
            return;
        }            
        if(txtAccount.getText().isEmpty() || passfPassword.getText().isBlank() || passfRe_enterPassword.getText().isBlank())
            btnCreateAccount.setEnabled(false);
        else
            btnCreateAccount.setEnabled(true);
    }
    
     private void GroupRadioBox(){
        btgRadioBox.add(rbMale);
        btgRadioBox.add(rbFemale);
        btgRadioBox.add(rbOther);
    }
     
     private void SetDateNow(){
         Calendar calendar = Calendar.getInstance();
         dcBrithday.setDate(calendar.getTime());
     }    
   
    /*CHECK INPUT*/
    private String ChonGioiTinh(){
        if(rbMale.isSelected())
            return "Nam";
        if(rbFemale.isSelected())
            return "Nữ";
        if(rbOther.isSelected())
            return "Khác";       
        JOptionPane.showMessageDialog(null, "Chưa chọn giới tính");
        return null;
    }
    
    private void CheckKeyPress(){
        txtLastName.addKeyListener(keyCheck.OnlyCharTextField());
        txtFirstName.addKeyListener(keyCheck.OnlyCharTextField());
        txtPhone.addKeyListener(keyCheck.OnlyNumberTextField());
    }    
    
    /*ACTION PERFORM*/
    private void ClearAllText(){
        txtLastName.setText("");
        txtFirstName.setText("");
        txtPhone.setText("");
        txtAddress.setText("");
        txtEmail.setText("");
    }
    
    
    private void btnTroVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroVeActionPerformed
        // TODO add your handling code here:
        FormRoute.openFormLogin(this);
    }//GEN-LAST:event_btnTroVeActionPerformed

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
        String password = new String(passfPassword.getPassword());
        String password1 = new String(passfRe_enterPassword.getPassword());
        if(!inputCheck.CheckBrithday(dcBrithday.getDate()))
            return;
        if(!inputCheck.CheckSDT(txtPhone.getText()))
            return;
        if(!inputCheck.CheckEmail(txtEmail.getText()))
            return;
        if(!inputCheck.CheckPassword(password, password1))
            return;
        try{ 
            // Send a request to the server
            password =  BCrypt.withDefaults().hashToString(12, password.toCharArray());
            Date selectedDate = dcBrithday.getDate();
            acc = new Account();
            acc.setID_User("");
            acc.setFrist_Name(txtFirstName.getText());
            acc.setLast_Name(txtLastName.getText());
            acc.setBrithday(selectedDate);
            acc.setGender(ChonGioiTinh());
            acc.setPhone(txtPhone.getText());
            acc.setAddress(txtAddress.getText());
            acc.setEmail(txtEmail.getText());
            acc.setAccount(txtAccount.getText());
            acc.setPassword(password);   
            AES aes=new AES();
            OperationJson requestPublicKey=new OperationJson();
            requestPublicKey.setOperation("GET_PUBLIC_KEY");
            String publicKeyReceived=sendRequestToServer(requestPublicKey);
            //Mã hoá mã user với public key của server
            String encryptAccount=aes.encrypt(gson.toJson(acc), aes.getPublicKeyFromString(publicKeyReceived));
            //Gửi account lên server dưới dạng json
            OperationJson createAccountJson=new OperationJson();
            createAccountJson.setOperation("create");
            createAccountJson.setPublicKey(aes.encodePublicKey(aes.getPublicKey()));
            createAccountJson.setData(encryptAccount);
            String respone=sendRequestToServer(createAccountJson);
            System.out.println("respone:::"+respone);
            OperationJson responseAccountCreated = gson.fromJson(respone, OperationJson.class);
            String result=responseAccountCreated.getOperation();
            switch (result) {
                case "Success":
                    JOptionPane.showMessageDialog(this, "Đăng ký thành công!");
                    String decryptAccount=aes.decrypt(responseAccountCreated.getData().toString(), aes.getPrivateKey());
                    Account accountRespone = gson.fromJson(decryptAccount, Account.class);
                    frmCameraAcess open = new frmCameraAcess(accountRespone, "dangKy");
                    open.setVisible(true);
                    this.dispose();
                    break;
                case "AccountNotFound":
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!","Lỗi",0);
                    break;
                case "CreateAccountFail":
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!","Lỗi",0);
                    break;
                case "DateTimeFormat":
                    JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày tháng!","Lỗi",0);
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!","Lỗi",0);
                    break;
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex,"Lỗi",JOptionPane.ERROR_MESSAGE);
        }     
        
    }//GEN-LAST:event_btnCreateAccountActionPerformed
    private String sendRequestToServer(OperationJson json){
        try (Socket socket = new Socket(BaseURL.SERVER_ADDRESS, BaseURL.PORT)){
            
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
            
            String sendJson =new Gson().toJson(json);
            out.println(sendJson);
            String result=in.readLine();
            socket.close();
            return result;
        } catch (IOException ex) {
            System.out.println("Lỗi"+ex.toString());
            return "Fail";
        }
    }
    private void cbShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbShowPasswordActionPerformed
        // TODO add your handling code here:
        if(cbShowPassword.isSelected()){
            passfPassword.setEchoChar((char) 0);
            passfRe_enterPassword.setEchoChar((char) 0);
        }            
        else{
            passfPassword.setEchoChar('\u2022');  
            passfRe_enterPassword.setEchoChar('\u2022');
        }
            
    }//GEN-LAST:event_cbShowPasswordActionPerformed

    private void txtLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameKeyPressed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgRadioBox;
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JButton btnTroVe;
    private javax.swing.JCheckBox cbShowPassword;
    private com.toedter.calendar.JDateChooser dcBrithday;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHo;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNhapLaiMatKhau;
    private javax.swing.JLabel lblSoDienThoai;
    private javax.swing.JLabel lblTaiKhoan;
    private javax.swing.JLabel lblTaoTaiKhoan;
    private javax.swing.JPasswordField passfPassword;
    private javax.swing.JPasswordField passfRe_enterPassword;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JRadioButton rbOther;
    private javax.swing.JTextField txtAccount;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
